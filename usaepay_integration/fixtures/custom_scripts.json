[
    {
       "doctype": "Custom Script",
       "script_type": "Client",
       "script_name": "USAePay Integration Router",
       "dt": "Sales Invoice",
       "script": "frappe.ui.form.on('Sales Invoice', { refresh(frm) { frm.add_custom_button(__('Pay with USAePay'), function() { console.log('Lead Source:', frm.doc.source); frappe.call({ method: 'frappe.client.get', args: { 'doctype': 'USAePay Lead Source Connection', 'filters': { 'lead_source': frm.doc.source, } }, callback: function(response) { if (response.message) { var customerList; var usaepayConnection = response.message; console.log('usaepayConnection:', usaepayConnection); const apiDetails = usaepayConnection.available_apis.find(api => api.api_type === 'Sale' || api.api_type === 'All Command Types'); console.log('API Details:', apiDetails); if (apiDetails) { frappe.prompt([ { label: __('Transaction API'), fieldname: 'api_type', fieldtype: 'Text', default: apiDetails ? `<div>Type: <b>${apiDetails.api_type}</b> </br> Key: <b>${apiDetails.api_key}</b> </br> Lead Source: <b>${usaepayConnection.lead_source} Source<b> </div>` : '', reqd: 1, read_only: 1 }, { label: __('Amount'), fieldname: 'amount', fieldtype: 'Currency', default: frm.doc.grand_total, reqd: 1 } ], (values) => { var customer; const billingContactNameParts = frm.doc.contact_display.split(' '); frappe.call({ method: 'frappe.client.get', args: { 'doctype': 'Customer', 'filters': { 'name': frm.doc.customer, } }, callback: function(response) { if (response.message) { customer = response.message; console.log('Customer:', customer); } } }); const postData = { command: apiDetails.api_type, invoice: frm.doc.name, ponum: frm.doc.po_no, email: frm.doc.contact_email, send_receipt: 1, merchemailaddr: frm.doc.company.email, amount: values.amount, creditcard: { cardholder: 'Nathaniel Bode', number: 4444111122223333, cvc: 123, avs_street: frm.doc.address_display, avs_postal_code: 1000, }, save_card: 1, save_customer: 1, save_customer_paymethod: 1, billing_address: { company: frm.doc.company.name, first_name: billingContactNameParts[1], last_name: billingContactNameParts.slice(1).join(''), street: frm.doc.customer_address.address_line_1, street2: frm.doc.customer_address.address_line_2, city: frm.doc.customer_address.city, state: frm.doc.customer_address.state, postalcode: frm.doc.customer_address.pincode, country: frm.doc.customer_address.country, phone: frm.doc.customer_address.phone, fax: frm.doc.customer_address.fax, }, shipping_address: { company: frm.doc.company.name, street: frm.doc.shipping_address.address_line_1, street2: frm.doc.shipping_address.address_line_2, city: frm.doc.shipping_address.city, state: frm.doc.shipping_address.state, postalcode: frm.doc.shipping_address.pincode, country: frm.doc.customer_address.country, phone: frm.doc.shipping_address.phone, }, currency: frm.doc.currency.symbol, software: 'ERPNext USAePay Integration - v0.0.1, https://github.com/natnaelTi/usaepay_integration', }; console.log('Post Data: ', postData); frappe.call({ method: 'usaepay_intergration.doctype.usaepay_lead_source_connection.process_payment', args: { api_details: apiDetails, post_data: postData }, callback: function(r) { if (r.message) { console.log('[INTERNAL]: Payment Processed [Response]:', r); if (r.message.status) { frappe.msgprint(__('Payment is processed successfully.')); frm.add_custom_button(__('Create Payment Entry'), function() { frappe.model.with_doctype('Payment Entry', function () { var doc = frappe.model.get_new_doc('Payment Entry'); frappe.set_route('Form', 'Payment Entry', doc.name); }); }); } } } }); }, __('Submit')); } else { frappe.msgprint(__('INT: No appropriate Sale-type API keys found to process the transaction.')); } } else { frappe.msgprint(__('EXT: No appropriate API keys found to process the transaction.')); } } }); }); } } });"
    }
 ]